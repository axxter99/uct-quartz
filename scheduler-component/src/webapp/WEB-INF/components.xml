<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
	<!-- course site owners -->

	<bean id="UCTCourseSiteOwners"
		class="org.sakaiproject.component.app.scheduler.jobs.UCTCourseSiteOwners">
		<property name="emailService">
			<ref bean="org.sakaiproject.email.api.EmailService" />
		</property>
		<property name="userDirectoryService">
			<ref bean="org.sakaiproject.user.api.UserDirectoryService" />
		</property>
		<property name="siteService">
			<ref bean="org.sakaiproject.site.api.SiteService" />
		</property>
		<property name="authzGroupService">
			<ref bean="org.sakaiproject.authz.api.AuthzGroupService" />
		</property>
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerUCTCourseSiteOwners"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>UCTCourseSiteOwners</value>
		</property>
		<property name="jobName">
			<value>UCT CourseSite Owners</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>


	<!--migrate CM -->
	<bean id="UCTMigrateCourseInfo"
		class="org.sakaiproject.component.app.scheduler.jobs.UCTMigrateCourseInfo">
		<property name="sqlService">
			<ref bean="org.sakaiproject.db.api.SqlService" />
		</property>
		<property name="courseManagementService">
			<ref
				bean="org.sakaiproject.coursemanagement.api.CourseManagementService" />
		</property>
		<property name="courseManagementAdministration">
			<ref
				bean="org.sakaiproject.coursemanagement.api.CourseManagementAdministration" />
		</property>
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="users">
			<map>
				<!-- Dept of Chemical Engineering
					Anastacia Haddon
					staff number: 01374828 
					Authorization Recieved-->
				<entry key="01374828">
					<value>CHE</value>
				</entry>
				<!--colleen SAN "01360522"
					<entry key="01360522">
					<value>SAN</value>
					</entry>-->
				<!-- robyn FAM 01407627
					<entry key="01407627">
					<value>FAM</value>
					</entry> -->
				<!-- petros FAM 01373614 -->
				<!-- Rowen CRJ law courses  01365463 -->
				<!-- Mandy Bedin and Paula RDL law courses 01027808 and 01349732 -->
				<!-- Dorothy for CML courses (01048554) -->
				<!-- Ken HS -->
				<!-- Freda HS -->
				<!--  Nanette might for the APG courses (01301365) -->
				<!--  Marilyn Solomons for AHS courses  (01368342) ?? -->
				<!-- Yoemna for IS courses-->
			</map>
		</property>

	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerUCTMigrateCourseInfo"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>UCTMigrateCourseInfo</value>
		</property>
		<property name="jobName">
			<value>UCT migrate course info</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>




	<!-- Redo Tabs-->
	<bean id="courseTabs"
		class="org.sakaiproject.component.app.scheduler.jobs.UCTResetCourseTabs">
		<property name="userDirectoryService">
			<ref bean="org.sakaiproject.user.api.UserDirectoryService" />
		</property>
		<property name="preferencesService">
			<ref bean="org.sakaiproject.user.api.PreferencesService" />
		</property>
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="siteService">
			<ref bean="org.sakaiproject.site.api.SiteService" />
		</property>
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerCourseTabs"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>courseTabs</value>
		</property>
		<property name="jobName">
			<value>Redo Course Tabs</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>

	<!-- Save Realms  -->
	<bean id="saveRealms"
		class="org.sakaiproject.component.app.scheduler.jobs.UCTSaveRealms">
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="siteService">
			<ref bean="org.sakaiproject.site.api.SiteService" />
		</property>
		<property name="authzGroupService">
			<ref bean="org.sakaiproject.authz.api.AuthzGroupService" />
		</property>
		<property name="courseManagementService" ref="org.sakaiproject.coursemanagement.api.CourseManagementService"/>
		<property name="term"><value>2008</value></property>
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerSaveRealms"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringStatefulJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>saveRealms</value>
		</property>
		<property name="jobName">
			<value>save course Realms</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>

	<!-- Save Realms  For upgrade-->
	<!--  deprecated<bean id="saveRealmsUpdate"
		class="org.sakaiproject.component.app.scheduler.jobs.UCTSaveRealmsUpdate">
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="siteService">
			<ref bean="org.sakaiproject.site.api.SiteService" />
		</property>
		<property name="authzGroupService">
			<ref bean="org.sakaiproject.authz.api.AuthzGroupService" />
		</property>
		<property name="groupProvider">
			<ref bean="org.sakaiproject.authz.api.GroupProvider" />
		</property>
		
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerSaveRealmsUpdate"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>saveRealmsUpdate</value>
		</property>
		<property name="jobName">
			<value>save course Realms for Update</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>
 -->

	<!--  check site quota's -->
	<bean id="setQuotas"
		class="org.sakaiproject.component.app.scheduler.jobs.IncreaseQuotas">
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="siteService">
			<ref bean="org.sakaiproject.site.api.SiteService" />
		</property>
		<property name="contentHostingService">
			<ref
				bean="org.sakaiproject.content.api.ContentHostingService" />
		</property>
		<property name="emailService" ref="org.sakaiproject.email.api.EmailService"/>
		<property name="minQuota">
			<value>1048576</value>
		</property>
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerSetQuotas"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>setQuotas</value>
		</property>
		<property name="jobName">
			<value>set site Quotas</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>

	<!-- Reset blank emails -->
	<bean id="fixEmails"
		class="org.sakaiproject.component.app.scheduler.jobs.FixEmails">
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="userDirectoryService">
			<ref bean="org.sakaiproject.user.api.UserDirectoryService" />
		</property>
		<property name="personManager">
			<ref
				bean="org.sakaiproject.api.common.edu.person.SakaiPersonManager" />
		</property>
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerFixEmails"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>fixEmails</value>
		</property>
		<property name="jobName">
			<value>fix user emails</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>

	<!-- Import New course metadata-->
	<bean id="importCourses"
		class="org.sakaiproject.component.app.scheduler.jobs.UCTImportCourses">
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="courseManagementService">
			<ref
				bean="org.sakaiproject.coursemanagement.api.CourseManagementService" />
		</property>
		<property name="courseManagementAdministration">
			<ref
				bean="org.sakaiproject.coursemanagement.api.CourseManagementAdministration" />
		</property>
		<property name="term">
			<value>2008</value>
		</property>
		<property name="filePath">
			<value>/data/sakai/import/2008_courses.csv</value>
		</property>
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerImportCourses"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>importCourses</value>
		</property>
		<property name="jobName">
			<value>Import New Course Data</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>
	
	<bean id="cleanUpCourses"
		class="org.sakaiproject.component.app.scheduler.jobs.CleanUpCmData">
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="courseManagementService">
			<ref
				bean="org.sakaiproject.coursemanagement.api.CourseManagementService" />
		</property>
		<property name="courseManagementAdministration">
			<ref
				bean="org.sakaiproject.coursemanagement.api.CourseManagementAdministration" />
		</property>
		<property name="term">
			<value>2008</value>
		</property>
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerCleanCourses"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>cleanUpCourses</value>
		</property>
		<property name="jobName">
			<value>Clean up course data</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>
	
<!-- update course sets -->
	<bean id="updateCoursesSets"
		class="org.sakaiproject.component.app.scheduler.jobs.UpdateOrgNames">
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="courseManagementService">
			<ref
				bean="org.sakaiproject.coursemanagement.api.CourseManagementService" />
		</property>
		<property name="courseManagementAdministration">
			<ref
				bean="org.sakaiproject.coursemanagement.api.CourseManagementAdministration" />
		</property>
		<property name="sqlService" 
			ref="org.sakaiproject.db.api.SqlService"/>
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.updateorgNames"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>updateCoursesSets</value>
		</property>
		<property name="jobName">
			<value>update uct course set names</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>	
	
	<!-- mark messages as read -->
	<!-- 	<bean id="markMessagesRead"
		class="org.sakaiproject.component.app.scheduler.jobs.MarkMessagesRead">
		<property name="areaManager" ref="org.sakaiproject.api.app.messageforums.AreaManager"/>
		<property name="authzGroupService" ref="org.sakaiproject.authz.api.AuthzGroupService" />
		<property name="messageForumsMessageManager" ref="org.sakaiproject.api.app.messageforums.MessageForumsMessageManager" />
		
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.markMessagesRead"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>markMessagesRead</value>
		</property>
		<property name="jobName">
			<value>mark Messages as read</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>	
	 -->
	
		<!--  check site quota's -->
	<bean id="addToolUserSite"
		class="org.sakaiproject.component.app.scheduler.jobs.AddPageToMyWorkspace">
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="siteService">
			<ref bean="org.sakaiproject.site.api.SiteService" />
		</property>
		<property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService"/>
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerAddpageUserSite"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>addToolUserSite</value>
		</property>
		<property name="jobName">
			<value>Add page to user Site</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>
	
	
			<!--  check if users are in auth tree -->
			 
	<bean id="checkUsersExist"
		class="org.sakaiproject.component.app.scheduler.jobs.UCTCheckAccounts">
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService"/>
		<property name="basePath"><value>o=uct</value></property>
		<property name="ldapHost"><value>srvslsath001.uct.ac.za srvslsath002.uct.ac.za srvslsadm001.uct.ac.za srvnovnds001.uct.ac.za srvslsnds001.uct.ac.za</value></property>
		<property name="ldapPort"><value>636</value></property>
		
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerCheckAccounts"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>checkUsersExist</value>
		</property>
		<property name="jobName">
			<value>Check users are in LDAP</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>
	
		<!--  Stefeul test job -->
	<bean id="statefulTestJob"
		class="org.sakaiproject.component.app.scheduler.jobs.UCTTestJob">
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerStatefulTestJob"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringStatefulJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>statefulTesJob</value>
		</property>
		<property name="jobName">
			<value>test staful job</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>
	
	
	
	<!--  Undelete assignemnts -->
	<bean id="undeleteAssingments"
		class="org.sakaiproject.component.app.scheduler.jobs.UndeleteAssignments">
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="assignmentService" ref="org.sakaiproject.assignment.api.AssignmentService" />
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerundeletAssignment"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>undeleteAssingments</value>
		</property>
		<property name="jobName">
			<value>undelete assignments</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>
	
	
	<!--  Clear the RTT message archive -->
	<bean id="clearRTTMail"
		class="org.sakaiproject.component.app.scheduler.jobs.ClearRTTMail">
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="mailArchiveService" ref="org.sakaiproject.mailarchive.api.MailArchiveService"/>
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerClearRTTMail"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>clearRTTMail</value>
		</property>
		<property name="jobName">
			<value>clear RTT mail</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>
	
	
	<!--  Clear the orpahened profiles -->
	<bean id="cleanProfiles"
		class="org.sakaiproject.component.app.scheduler.jobs.ClearorphanedProfiles">
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="sakaiPersonManager"
			ref="org.sakaiproject.api.common.edu.person.SakaiPersonManager" />
		<property name="sqlService" ref="org.sakaiproject.db.api.SqlService" />
	</bean>
	
	

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerClearProfiles"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>cleanProfiles</value>
		</property>
		<property name="jobName">
			<value>clear orphaned profiles</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>
	
	
<!--  Reset content types -->
	<bean id="resetTypes"
		class="org.sakaiproject.component.app.scheduler.jobs.ResetContentTypes">
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
		<property name="siteService">
			<ref bean="org.sakaiproject.site.api.SiteService" />
		</property>
		<property name="contentHostingService">
			<ref
				bean="org.sakaiproject.content.api.ContentHostingService" />
		</property>
		<property name="extensions">
			<map>
				<entry key="docx"><value>application/vnd.openxmlformats-officedocument.wordprocessingml.document</value></entry>
				<entry key="doc"><value>application/msword</value></entry>
				<entry key="pdf"><value>application/pdf</value></entry>
			</map>
		</property>
		
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerResetTypes"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>resetTypes</value>
		</property>
		<property name="jobName">
			<value>reset content Types</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>
	
	
</beans>
